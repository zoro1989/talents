<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ccbjb.common.mapper.BusStaffMapper">
    <sql id="Base_Column_List">
        s.id,
        s.staff_no,
        s.name,
        s.name_spell,
        s.name_kana,
        s.name_jp,
        s.sex,
        s.birthday,
        s.join_day,
        s.practice_start_date,
        s.practice_end_date,
        s.trial_start_date,
        s.trial_end_date,
        s.trial_result,
        s.formal_date,
        s.job_status,
        s.befwork_age,
        s.aftwork_age,
        s.work_age,
        s.work_date,
        s.graduate_date,
        s.graduate_school,
        s.education,
        s.training_mode,
        s.major,
        s.degree,
        s.email,
        s.tel,
        s.urgency_cnt,
        s.urgency_tel,
        s.home_addr,
        s.addr,
        s.register_addr,
        s.register_type,
        s.jp_level,
        s.en_level,
        s.salary_card,
        s.id_card,
        s.professional,
        s.door_no,
        s.check_no,
        s.nation,
        s.country,
        s.ismarried,
        s.hasbaby,
        s.doc_manage_mode,
        s.doc_no,
        s.doc_fee,
        s.doc_remark,
        s.ispartied,
        s.partied_date,
        s.partied_rls,
        s.partied_rls1,
        s.passport_no,
        s.salary_status,
        s.doc_box_no,
        s.practice_fee,
        s.trial_fee,
        s.formal_fee_bottom,
        s.formal_fee_top,
        s.formal_fee,
        s.department,
        s.leave_date,
        s.duty,
        s.cmpbefwork_age,
        s.t_level,
        s.student_line
    </sql>

    <sql id="where_all">
        <where>
            <if test="staffNo != null and staffNo !='' ">
                and (
                LOWER(s.staff_no) like CONCAT("%",#{staffNo,jdbcType=VARCHAR},"%")
                )
            </if>
            <if test="name != null and name !='' ">
                and (
                LOWER(s.name) like CONCAT("%",#{name,jdbcType=VARCHAR},"%")
                )
            </if>
            <if test="nameKana != null and nameKana !='' ">
                and (
                LOWER(s.name_kana) like CONCAT("%",#{nameKana,jdbcType=VARCHAR},"%")
                )
            </if>
            <if test="nameJp != null and nameJp !='' ">
                and (
                LOWER(s.name_jp) like CONCAT("%",#{nameJp,jdbcType=VARCHAR},"%")
                )
            </if>
            <if test="sexIdList != null and sexIdList.size() != 0">
                and s.sex in
                <foreach item="item" index="index" open="(" separator="," close=")" collection="sexIdList">
                  #{item}
                </foreach>
            </if>
            <if test="(joinDayStart == null or joinDayStart =='') and joinDayEnd != null and joinDayEnd !='' ">
                and s.join_day &lt;= #{joinDayEnd}
            </if>
            <if test="joinDayStart != null and joinDayStart !='' and (joinDayEnd == null or joinDayEnd =='') ">
                and s.join_day &gt;= #{joinDayStart}
            </if>
            <if test="joinDayStart != null and joinDayStart !='' and joinDayEnd != null and joinDayEnd !='' ">
                and s.join_day between #{joinDayStart} and #{joinDayEnd}
            </if>

            <if test="(practiceStartDateStart == null or practiceStartDateStart =='') and practiceStartDateEnd != null and practiceStartDateEnd !='' ">
                and s.practice_start_date &lt;= #{practiceStartDateEnd}
            </if>
            <if test="practiceStartDateStart != null and practiceStartDateStart !='' and (practiceStartDateEnd == null or practiceStartDateEnd =='') ">
                and s.practice_start_date &gt;= #{practiceStartDateStart}
            </if>
            <if test="practiceStartDateStart != null and practiceStartDateStart !='' and practiceStartDateEnd != null and practiceStartDateEnd !='' ">
              and s.practice_start_date between #{practiceStartDateStart} and #{practiceStartDateEnd}
            </if>

            <if test="(practiceEndDateStart == null or practiceEndDateStart =='') and practiceEndDateEnd != null and practiceEndDateEnd !='' ">
                and s.practice_end_date &lt;= #{practiceEndDateEnd}
            </if>
            <if test="practiceEndDateStart != null and practiceEndDateStart !='' and (practiceEndDateEnd == null or practiceEndDateEnd =='') ">
                and s.practice_end_date &gt;= #{practiceEndDateStart}
            </if>
            <if test="practiceEndDateStart != null and practiceEndDateStart !='' and practiceEndDateEnd != null and practiceEndDateEnd !='' ">
              and s.practice_end_date between #{practiceEndDateStart} and #{practiceEndDateEnd}
            </if>

            <if test="(trialStartDateStart == null or trialStartDateStart =='') and trialStartDateEnd != null and trialStartDateEnd !='' ">
                and s.trial_start_date &lt;= #{trialStartDateEnd}
            </if>
            <if test="trialStartDateStart != null and trialStartDateStart !='' and (trialStartDateEnd == null or trialStartDateEnd =='') ">
                and s.trial_start_date &gt;= #{trialStartDateStart}
            </if>
            <if test="trialStartDateStart != null and trialStartDateStart !='' and trialStartDateEnd != null and trialStartDateEnd !='' ">
              and s.trial_start_date between #{trialStartDateStart} and #{trialStartDateEnd}
            </if>

            <if test="(trialEndDateStart == null or trialEndDateStart =='') and trialEndDateEnd != null and trialEndDateEnd !='' ">
                and s.practice_end_date &lt;= #{trialEndDateEnd}
            </if>
            <if test="trialEndDateStart != null and trialEndDateStart !='' and (trialEndDateEnd == null or trialEndDateEnd =='') ">
                and s.practice_end_date &gt;= #{trialEndDateStart}
            </if>
            <if test="trialEndDateStart != null and trialEndDateStart !='' and trialEndDateEnd != null and trialEndDateEnd !='' ">
              and s.practice_end_date between #{trialEndDateStart} and #{trialEndDateEnd}
            </if>

            <if test="(formalDateStart == null or formalDateStart =='') and formalDateEnd != null and formalDateEnd !='' ">
                and s.formal_date &lt;= #{formalDateEnd}
            </if>
            <if test="formalDateStart != null and formalDateStart !='' and (formalDateEnd == null or formalDateEnd =='') ">
                and s.formal_date &gt;= #{formalDateStart}
            </if>
            <if test="formalDateStart != null and formalDateStart !='' and formalDateEnd != null and formalDateEnd !='' ">
              and s.formal_date between #{formalDateStart} and #{formalDateEnd}
            </if>
            <if test="jobStatusIdList != null and jobStatusIdList.size() != 0">
              and s.job_status in
              <foreach item="item" index="index" open="(" separator="," close=")" collection="jobStatusIdList">
                #{item}
              </foreach>
            </if>

            <if test="(befworkAgeStart == null or befworkAgeStart =='') and befworkAgeEnd != null and befworkAgeEnd !='' ">
                and s.befwork_age &lt;= #{befworkAgeEnd}
            </if>
            <if test="befworkAgeStart != null and befworkAgeStart !='' and (befworkAgeEnd == null or befworkAgeEnd =='') ">
                and s.befwork_age &gt;= #{befworkAgeStart}
            </if>
            <if test="befworkAgeStart != null and befworkAgeStart !='' and befworkAgeEnd != null and befworkAgeEnd !='' ">
              and s.befwork_age between #{befworkAgeStart} and #{befworkAgeEnd}
            </if>

            <if test="(cmpbefworkAgeStart == null or cmpbefworkAgeStart =='') and cmpbefworkAgeEnd != null and cmpbefworkAgeEnd !='' ">
                and s.cmpbefwork_age &lt;= #{cmpbefworkAgeEnd}
            </if>
            <if test="cmpbefworkAgeStart != null and cmpbefworkAgeStart !='' and (cmpbefworkAgeEnd == null or cmpbefworkAgeEnd =='') ">
                and s.cmpbefwork_age &gt;= #{cmpbefworkAgeStart}
            </if>
            <if test="cmpbefworkAgeStart != null and cmpbefworkAgeStart !='' and cmpbefworkAgeEnd != null and befworkAgeEnd !='' ">
              and s.cmpbefwork_age between #{cmpbefworkAgeStart} and #{cmpbefworkAgeEnd}
            </if>

            <if test="(aftworkAgeStart == null or aftworkAgeStart =='') and aftworkAgeEnd != null and aftworkAgeEnd !='' ">
                and s.aftwork_age &lt;= #{aftworkAgeEnd}
            </if>
            <if test="aftworkAgeStart != null and aftworkAgeStart !='' and (aftworkAgeEnd == null or aftworkAgeEnd =='') ">
                and s.aftwork_age &gt;= #{aftworkAgeStart}
            </if>
            <if test="aftworkAgeStart != null and aftworkAgeStart !='' and aftworkAgeEnd != null and aftworkAgeEnd !='' ">
              and s.aftwork_age between #{aftworkAgeStart} and #{aftworkAgeEnd}
            </if>

            <if test="(workAgeStart == null or workAgeStart =='') and workAgeEnd != null and workAgeEnd !='' ">
                and s.work_age &lt;= #{workAgeEnd}
            </if>
            <if test="workAgeStart != null and workAgeStart !='' and (workAgeEnd == null or workAgeEnd =='') ">
                and s.work_age &gt;= #{workAgeStart}
            </if>
            <if test="workAgeStart != null and workAgeStart !='' and workAgeEnd != null and workAgeEnd !='' ">
              and s.work_age between #{workAgeStart} and #{workAgeEnd}
            </if>

            <if test="(workDateStart == null or workDateStart =='') and workDateEnd != null and workDateEnd !='' ">
                and s.work_date &lt;= #{workDateEnd}
            </if>
            <if test="workDateStart != null and workDateStart !='' and (workDateEnd == null or workDateEnd =='') ">
                and s.work_date &gt;= #{workDateStart}
            </if>
            <if test="workDateStart != null and workDateStart !='' and workDateEnd != null and workDateEnd !='' ">
              and s.work_date between #{workDateStart} and #{workDateEnd}
            </if>

            <if test="(graduateDateStart == null or graduateDateStart =='') and graduateDateEnd != null and graduateDateEnd !='' ">
                and s.graduate_date &lt;= #{graduateDateEnd}
            </if>
            <if test="graduateDateStart != null and graduateDateStart !='' and (graduateDateEnd == null or graduateDateEnd =='') ">
                and s.graduate_date &gt;= #{graduateDateStart}
            </if>
            <if test="graduateDateStart != null and graduateDateStart !='' and graduateDateEnd != null and graduateDateEnd !='' ">
              and s.graduate_date between #{graduateDateStart} and #{graduateDateEnd}
            </if>
            <if test="graduateSchool != null and graduateSchool !='' ">
              and (
              LOWER(s.graduate_school) like CONCAT("%",#{graduateSchool,jdbcType=VARCHAR},"%")
              )
            </if>
            <if test="educationIdList != null and educationIdList.size() != 0">
              and s.education in
              <foreach item="item" index="index" open="(" separator="," close=")" collection="educationIdList">
                #{item}
              </foreach>
            </if>
            <if test="major != null and major !='' ">
              and (
              LOWER(s.major) like CONCAT("%",#{major,jdbcType=VARCHAR},"%")
              )
            </if>
            <if test="degreeIdList != null and degreeIdList.size() != 0">
              and s.degree in
              <foreach item="item" index="index" open="(" separator="," close=")" collection="degreeIdList">
                #{item}
              </foreach>
            </if>
            <if test="jpLevelIdList != null and jpLevelIdList.size() != 0">
              and s.jp_level in
              <foreach item="item" index="index" open="(" separator="," close=")" collection="jpLevelIdList">
                #{item}
              </foreach>
            </if>
            <if test="enLevelIdList != null and enLevelIdList.size() != 0">
              and s.en_level in
              <foreach item="item" index="index" open="(" separator="," close=")" collection="enLevelIdList">
                #{item}
              </foreach>
            </if>
            <if test="nationIdList != null and nationIdList.size() != 0">
              and s.nation in
              <foreach item="item" index="index" open="(" separator="," close=")" collection="nationIdList">
                #{item}
              </foreach>
            </if>
            <if test="countryIdList != null and countryIdList.size() != 0">
              and s.country in
              <foreach item="item" index="index" open="(" separator="," close=")" collection="countryIdList">
                #{item}
              </foreach>
            </if>
            <if test="yesNoIdList != null and yesNoIdList.size() != 0">
              and s.ismarried in
              <foreach item="item" index="index" open="(" separator="," close=")" collection="yesNoIdList">
                #{item}
              </foreach>
            </if>
            <if test="yesNoIdList != null and yesNoIdList.size() != 0">
              and s.hasbaby in
              <foreach item="item" index="index" open="(" separator="," close=")" collection="yesNoIdList">
                #{item}
              </foreach>
            </if>
            <if test="yesNoIdList != null and yesNoIdList.size() != 0">
              and s.ispartied in
              <foreach item="item" index="index" open="(" separator="," close=")" collection="yesNoIdList">
                #{item}
              </foreach>
            </if>
            <if test="departmentIdList != null and departmentIdList.size() != 0">
              and s.department in
              <foreach item="item" index="index" open="(" separator="," close=")" collection="departmentIdList">
                #{item}
              </foreach>
            </if>
            <if test="dutyIdList != null and dutyIdList.size() != 0">
              and s.duty in
              <foreach item="item" index="index" open="(" separator="," close=")" collection="dutyIdList">
                #{item}
              </foreach>
            </if>
            <if test="tLevelIdList != null and tLevelIdList.size() != 0">
              and s.t_level in
              <foreach item="item" index="index" open="(" separator="," close=")" collection="tLevelIdList">
                #{item}
              </foreach>
            </if>
            <if test="studentLineIdList != null and studentLineIdList.size() != 0">
              and s.student_line in
              <foreach item="item" index="index" open="(" separator="," close=")" collection="studentLineIdList">
                #{item}
              </foreach>
            </if>
            <if test="(devLanguageIdList != null and devLanguageIdList.size() != 0) or (operateSysIdList != null and operateSysIdList.size() != 0) or (operateSysIdList != null and operateSysIdList.size() != 0) or (devToolIdList != null and devToolIdList.size() != 0) or (devDatabaseIdList != null and devDatabaseIdList.size() != 0) or (devAppServerIdList != null and devAppServerIdList.size() != 0) or (devFrameworkIdList != null and devFrameworkIdList.size() != 0) or (serviceCustomerIdList != null and serviceCustomerIdList.size() != 0) or (busTypeIdList != null and busTypeIdList.size() != 0) or (selectedProjectId != null and selectedProjectId != '')">
                and s.id in (
                select e.staff_id from bus_project_exp e left join bus_project p on e.project_id = p.id
                    <where>
                        <if test="devLanguageIdList != null and devLanguageIdList.size() != 0">
                            and p.dev_language in
                            <foreach item="item" index="index" open="(" separator="," close=")" collection="devLanguageIdList">
                                #{item}
                            </foreach>
                        </if>
                        <if test="operateSysIdList != null and operateSysIdList.size() != 0">
                            and p.operate_sys in
                            <foreach item="item" index="index" open="(" separator="," close=")" collection="operateSysIdList">
                                #{item}
                            </foreach>
                        </if>
                        <if test="devToolIdList != null and devToolIdList.size() != 0">
                            and p.dev_tool in
                            <foreach item="item" index="index" open="(" separator="," close=")" collection="devToolIdList">
                                #{item}
                            </foreach>
                        </if>
                        <if test="devDatabaseIdList != null and devDatabaseIdList.size() != 0">
                            and p.dev_database in
                            <foreach item="item" index="index" open="(" separator="," close=")" collection="devDatabaseIdList">
                                #{item}
                            </foreach>
                        </if>
                        <if test="devAppServerIdList != null and devAppServerIdList.size() != 0">
                            and p.dev_app_server in
                            <foreach item="item" index="index" open="(" separator="," close=")" collection="devAppServerIdList">
                                #{item}
                            </foreach>
                        </if>
                        <if test="devFrameworkIdList != null and devFrameworkIdList.size() != 0">
                            and p.dev_framework in
                            <foreach item="item" index="index" open="(" separator="," close=")" collection="devFrameworkIdList">
                                #{item}
                            </foreach>
                        </if>
                        <if test="serviceCustomerIdList != null and serviceCustomerIdList.size() != 0">
                            and p.service_customer in
                            <foreach item="item" index="index" open="(" separator="," close=")" collection="serviceCustomerIdList">
                                #{item}
                            </foreach>
                        </if>
                        <if test="busTypeIdList != null and busTypeIdList.size() != 0">
                            and p.bus_type in
                            <foreach item="item" index="index" open="(" separator="," close=")" collection="busTypeIdList">
                                #{item}
                            </foreach>
                        </if>
                        <if test="selectedProjectId != null and selectedProjectId != ''">
                            and e.project_id = #{selectedProjectId}
                        </if>
                    </where>
                )
            </if>
        </where>
    </sql>
    <select id="findAllStaff" parameterType="BusStaff" resultType="BusStaff">
        select distinct
        <include refid="Base_Column_List"/>
        from bus_staff s
        <include refid="where_all"/>
    </select>
    <select id="getChartPersonDataByDicType" resultType="ChartDataModel">
        select count(s.${dicType}) as value ,d.dic_label as name
        from bus_staff s
        inner join (select d1.dic_label,d1.dic_value from sys_dic d1 right join sys_dic d2 on d1.parent_id = d2.id where d2.dic_value = #{dicType}) d
        on s.${dicType}=d.dic_value
        group by s.${dicType}
    </select>
    <select id="getChartProjectDataByDicType" resultType="ChartDataModel">
        select count(p.${dicType}) as value,d.dic_label as name
        from bus_project_exp e
	left join bus_project p
		on p.id = e.project_id
	inner join (select d1.dic_label,d1.dic_value from sys_dic d1 right join sys_dic d2 on d1.parent_id = d2.id where d2.dic_value = #{dicType}) d
		on p.${dicType}=d.dic_value
	group by p.${dicType}
    </select>
</mapper>